version: '3.8'

services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.example
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - pgsql
  #     - redis
  #   volumes:
  #     - .:/app
  #     - ./config/example:/app/config
  #   environment:
  #     - APP_ENV=example
  #     - CONFIG_PATH=/app/config/config.example.yaml
  #   command: ["./main"]

  pgsql:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_example_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=example_db
      - TZ=Asia/Bangkok
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_example_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongodb_example_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=example_db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_example_data:
  redis_example_data:
  mongodb_example_data: