version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "8080:8080"
    depends_on:
      - pgsql
      - redis
    volumes:
      - ./config/prod:/app/config
    environment:
      - APP_ENV=prod
      - CONFIG_PATH=/app/config/config.prod.yaml
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgsql:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secure-password
      - POSTGRES_DB=chatbot_prod
      - TZ=Asia/Bangkok
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    command: redis-server --requirepass secure-redis-password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "secure-redis-password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongodb_prod_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=chatbot_prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_prod_data:
  redis_prod_data:
  mongodb_prod_data: